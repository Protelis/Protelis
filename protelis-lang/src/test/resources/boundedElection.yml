# result:
#  {0 11_0_3_8_1_8,  1 11_0_3_9_1_11,   2 11_0_3_10_3_11,    3 11_0_3_11_3_11,
#   4 11_0_7_8_9_8,  5 11_0_7_9_9_11,   6 11_0_7_10_11_11,   7 11_0_7_11_11_11,
#   8 11_0_11_8_9_8, 9 11_0_11_9_9_11,  10 11_0_11_10_11_11, 11 11_0_11_11_11_11}

# Tests boundedElection as follows (every test is separated by an underscore):
# asigning leadership to the largest id
# assigning leadership to the lowest id
# assignign leadership to the rightmost device
# assigning leadership to the bottommost device
# assigning leadership to the largest id but reducing range to ~2 (1 hop)
# assigning leadership to the largest id but reducing range to ~3 (~2 hops)

incarnation: test

network-model:
  type: EuclideanDistance
  parameters: [1.8]

program: &program
  - time-distribution: 1
    program: boundedElection

displacements:
  - in:
      type: Grid
      parameters: [0, 0, 3, 2, 1, 1, 0, 0]
    programs:
      - *program
